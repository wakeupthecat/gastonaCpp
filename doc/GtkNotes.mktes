#h Notes about Gtk and GantonaGtk

--- Primera version de Listix (luaix) y SQL

Compila pero lua peta cuando se ejecuta, también parece que no se notifica correctamente a los mensajes de los
widgets.


--- compilar gastonaC en Windows con Lua y sqlite retocado

compilar sqlite en C, -c solo objetos. esto genera los ficheros o

      cd sqlite
      gcc -c shellmain.c
      gcc -c sqlite3.c

shellmain.c contiene :


      + el shell.c oficial 
      + la función extendida samefilecontent
      + nombre de main cambiado por shellmain

compilar lua, generando liblua.a usando lua-5.3.4\src\luarcas.bat

en win/winMainGast.cpp incluimos las funciones básicas haciendo

      extern "C" int shellmain(int argc, char **argv);
      extern "C" {
      ///     // #include "lua.h"
          #include "lualib.h"
          #include "lauxlib.h"
      }

y en inicio algun código llamando las funciones

            char aa[100][100];
            strcpy (aa[0], "sqlite");
            strcpy (aa[1], "-version");
            shellmain(2, (char **) &aa);
            
            char line[256]; 
            lua_State *L = luaL_newstate(); /* create a new state */ 
            luaL_openlibs(L); /* open the standard libraries */ 
            
            /* reads lines and executes them */ 
            //while (fgets(line, sizeof(line), stdin) != NULL) { 
                luaL_loadstring(L, "print \"luarcaaaas!!!\""); /* compile line to a function */ 
                lua_pcall(L, 0, 0, 0); /* call the function */ 
            //} 

entonces llamar a 

      compile32_lua.bat

cuyo contenido es

      g++ -std=c++11 -fpermissive -static -Ibase -Iwin -Ilua-5.3.4\src -o gastonaWinLua.exe win/winMainGast.cpp lua-5.3.4/src/liblua.a sqlite/shellmain.o sqlite/sqlite3.o  -l gdi32

IMPORTANTE!!!

      PRIMERO      win/winMainGast.cpp 
      LUEGO        lua-5.3.4/src/liblua.a sqlite/shellmain.o sqlite/sqlite3.o 
      Y AL FINAL   -l gdi32

sino g++ NO se entera!! y dá problemas de undefines etc...


--- Note about how "easy" is to install gtk for windows

Look at this guide from 2015 (is up to date?)

      https://gtkmm-installation.blogspot.com/2015/01/gtkmm-installation-on-windows-step-by.html


--- About detecting resize

Parece que hay dos maneras

---- On "size-allocated" event


      g_signal_connect (G_OBJECT(window), "size-allocated", G_CALLBACK(on_size_allocated), NULL);
      ...



---- On "configure-event" event

The ::configure-event signal will be emitted when the size, position or stacking of the widget 's window has changed.

         gtk_widget_add_events(GTK_WIDGET(window), GDK_CONFIGURE);
         g_signal_connect (G_OBJECT(window), "configure-event", G_CALLBACK(resize_callback), NULL);

         ...
         gboolean on_configure_event (GtkWidget *widget, GdkEvent  *event, gpointer   user_data)
         {
            // class GdkEventConfigure
            // {
            //     height;
            //     send_event;
            //     type;
            //     width;
            //     window;
            //     x;
            //     y;
            // }
            if (widget == mainFrame)
            {
               gaston.showLayout (widget, event.width, event.height);
               return true;
            }
            return false;
         }

---- Using gtk_window_get_size

Or on any of the two above signals using the function gtk_window_get_size. But it does not seem to be the best option

      int dx, dy;
      gtk_window_get_size (GTK_WINDOW (widget), &dx, &dy);

--- Fuentes consultadas

      https://developer.gnome.org/gtk3/stable/GtkWindow.html
      http://zetcode.com/gui/gtk2/gtkevents/
